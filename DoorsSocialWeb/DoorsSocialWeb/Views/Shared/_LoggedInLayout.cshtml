@model DoorsSocialWeb.Models.ViewModels.LoggedInSharedLayoutViewModel

@{
    Layout = null;
    var notCount = Model.getFriendRequests(Model.currentUser.Id).Count() + Model.getGroupRequestsYouAreOwnerOf().Count();

    bool isGroup = Request.RawUrl.Contains("GroupView");
    int groupID = 0;
    if (isGroup)
    {
        groupID = Int32.Parse(new string(Request.RawUrl.Where(c => Char.IsDigit(c)).ToArray()));
    }
}

@section scripts{
    <script src="~/Scripts/jquery.signalR-2.1.1.js"></script>
    <script src="~/SignalR/hubs"></script>
    <script src="~/Scripts/timer.js"></script>
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link href='http://fonts.googleapis.com/css?family=Poiret+One' rel='stylesheet' type='text/css'>
    <title></title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/Scripts/ajax.js")
    <script src="~/Scripts/Script.js"></script>
</head>
<body>
    <div id="messageCenter" class="modalDialog">
        <div>
            <a href="#close" title="Close" class="close">X</a>
            <p>SMEGMA MESSAGES</p>
            @if (Model.getFirstMessages(@Model.currentUser.Id) != null)
            {
                foreach (var m in Model.getFirstMessages(@Model.currentUser.Id))
                {
                    <p>@m.dateCreated</p>
                    if (m.senderID == Model.currentUser.Id)
                    {
                        <p>@Model.getAuthor(m.recieverID).displayName</p>
                        <p>You sent</p>
                        <p>@m.subject</p>
                    }
                    else if (m.recieverID == Model.currentUser.Id)
                    {
                        <p>@Model.getAuthor(m.senderID).displayName</p>
                        <p>You recieved</p>
                        <p>@m.subject</p>
                    }
                }
            }
            else
            {
                <p>No messages to show</p>
            }
        </div>
    </div>

    <div id="createGroup" class="modalDialog">
        <div class="notificationPopup">
            @using (Html.BeginForm("CreateGroup", "LoggedIn", FormMethod.Post, new { role = "form" }))
            {
                <a href="#close" title="Close" class="close">X</a>
                <h1>Create a group</h1>
                <input type="hidden" name="ownerid" value="@Model.currentUser.Id" />
                <p>Group name: </p>
                <input type="text" name="groupname" />
                <p>Group description: </p>
                <textarea name="groupdescription"></textarea>
                <input type="submit" value="Create Group" />
            }
        </div>
    </div>

    <div id="notificationCenter" class="modalDialog">
        <div>
            <a href="#close" title="Close" class="close">X</a>
            <div class="notificationContainer">
                <h1>Friend Requests</h1>
                <div class="friendRequests">
                    @if (Model.getFriendRequests(Model.currentUser.Id) != null)
                    {
                        foreach (var m in Model.getFriendRequests(Model.currentUser.Id))
                        {
                            if (m.userIsApproved == false)
                            {
                                <div class="request">
                                    <img src="@Model.getAuthor(m.userRequestID).displayImageUrl" />
                                    <p>@Model.getAuthor(m.userRequestID).displayName has added you!</p>
                                    <div class="decision">
                                        <a href="@Url.Action("userApprovesFriendRequest", "LoggedIn", new { requestId = m.ID })"><input type="submit" value="Accept" class="approveFriend" /></a>
                                        <a href="@Url.Action("userDeclinesFriendRequest", "LoggedIn", new { requestId = m.ID })"><input type="submit" value="Decline" class="declineFriend" /></a>
                                    </div>
                                </div>
                            }
                        }
                    }
                </div>
                <h1>Group Requests</h1>
                <div class="groupRequests">
                    @if (Model.getGroupRequestsYouAreOwnerOf() != null)
                    {
                        foreach (var m in Model.getGroupRequestsYouAreOwnerOf())
                        {
                            if (m.userIsApproved == false)
                            {
                                <div class="request">
                                    <img src="@Model.getAuthor(m.userRequestId).displayImageUrl" />
                                    <p>@Model.getAuthor(m.userRequestId).displayName request to join @Model.getGroupById(m.groupID).groupName</p>
                                    <div class="decision">
                                        <a href="@Url.Action("userAcceptsGroupRequest", "LoggedIn", new { requestId = m.id })"><input type="submit" value="Accept" class="approveFriend" /></a>
                                        <a href="@Url.Action("userDeclinesGroupRequest", "LoggedIn", new { requestId = m.id })"><input type="submit" value="Decline" class="declineFriend" /></a>
                                    </div>
                                </div>
                            }
                        }
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="header">
        <div class="loginLogo">
            <a href='@Url.Action("Index", "LoggedIn")'>
                <img src="http://www.ads.menn.is/logo.png" height="35">
            </a>
        </div>
        <div>
            @using (Html.BeginForm("Search", "LoggedIn", FormMethod.Post, new { role = "form" }))
            {
                <input type="text" name="searchTerm" />
            }
        </div>
        <a href="#messageCenter"><div class="messages"></div></a>
        <a href="#notificationCenter">
            <div class="notification"></div>
            @if (notCount != null && notCount != 0)
            {
                <div class="notificationsNo"><p>@notCount</p></div>
            }
        </a>

        @Html.ActionLink("Sign Out", "Logoff", "LoggedIn", null, new { @class = "logout" })


        <div class="notCount"></div>
    </div>
    <div class="leftPanel">
        <div id="groupHeader">
            <h4>Groups</h4>
        </div>
        <ul class="groupList">
            @if (Model.groups != null)
            {
                if (Model.groups.Count() == 0)
                {
                    <p>You are not a member of any group!</p>
                }
                foreach (var m in Model.groups)
                {
                    <li>
                        <img src="http://www.ads.menn.is/groups.png" height="15">
                        @Html.ActionLink(m.groupName, "GroupView", "Group", new { id = m.ID }, new { @class = "aGroup" })
                    </li>
                    if (m.ID == groupID)
                    {
                        foreach (var t in Model.getTopics(groupID))
                        {
                            <li>
                                @Html.ActionLink(t.topicName, "TopicView", "Group", new { id = t.ID }, new { @class = "aGroup" })
                            </li>
                        }
                    }
                }
            }
        </ul>
        <div class="createGroup">
            <a href="#createGroup"><h4>Create a Group</h4></a>
        </div>

    </div>

    <div class="rightPanel">
        <div class="profileSnippet">
            <a href="@Url.Action("Profile", "Profile", new { id = Model.currentUser.Id })">
                @if (Model.currentUser.displayImageUrl != null)
                {


                    <img src="@Model.currentUser.displayImageUrl" alt="Theodor">


                }
                else
                {
                    <img src="http://fc07.deviantart.net/fs71/f/2012/357/7/7/profile_picture_by_ospider-d5ovoc2.jpg" alt="Theodor">

                }
            </a>
            <h3> @Model.currentUser.displayName </h3>
        </div>
        <div class="breaker"></div>
        <div class="friendHeader">
            <div class="friendLabel"><h4>Friends</h4></div>
            <div class="friendCount"><h4>@Model.friends.Count()</h4></div>
        </div>
        <div class="friendList">
            @if (Model.friends.Count() == 0)
            {
                <p>You dont have any friends.</p>
            }
            @foreach (var m in Model.friends)
            {
                <a href="@Url.Action("Profile", "Profile", new { id = m.Id})">
                    <div class="perFriend">

                        @if (m.displayImageUrl != null)
                        {
                            <img src="@m.displayImageUrl" height="25" width="25">
                        }
                        else
                        {
                            <img src="http://fc07.deviantart.net/fs71/f/2012/357/7/7/profile_picture_by_ospider-d5ovoc2.jpg" height="25" width="25">
                        }
                        <p class="aFriend">@m.displayName</p>

                    </div>
                </a>
            }
        </div>
    </div>
    <div class="sharedContainer">
        @RenderBody()
    </div>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/Scripts/ajax.js")
    @RenderSection("scripts", required: false)
</body>
</html>
